dconf databases:
================
We have 3 databases.
  - A read only system database called "nemo" which is used to store configuration for packages coming from nemo.
  - A read only system database called "vendor". This allows vendors to override and customize stuff.
    An example is the theme. Nemo has its theme and the nemo database contains the name of it.
    A vendor (like Jolla can override it with its own theme and store that info in the vendor db).
  - A read/write db called user which contains the configuration.

Configuration file which specifies the databases is stored in /etc/dconf/profile/user
  - User db is in: /home/nemo/.config/dconf/user
  - nemo db is in: /etc/dconf/db/nemo
  - vendor db is stored in /etc/dconf/db/vendor

Adding app specific defaults:
=============================
    - Create a key file with your defaults. You can check dconf documentation for an example https://developer.gnome.org/dconf/unstable/dconf-overview.html (Search for Key Files) or check /etc/dconf/db/nemo.d/
    - copy it to /etc/dconf/db/nemo.d/<package-name>.txt
    - call dconf-update via a oneshot (%{_bindir}/add-oneshot dconf-update) in %post.

GConf migration:
================
This will happen when dconf gets installed during the next boot.
Migration is triggered by a oneshot script (dconf-migrate)
dconf-migrate calles gconf2dconf binary which does the actual migration
Migration will be attempted _ONLY ONCE_ even if it fails.
gconf2dconf will set a dconf key (/dconf/migration_timestamp)

"dconf unset /dconf/migration_timestamp" can be used to unset the key
